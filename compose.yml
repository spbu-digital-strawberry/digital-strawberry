services:
  rmq:
    image: rabbitmq:3-management-alpine
    restart: on-failure
    environment:
      - RABBITMQ_DEFAULT_VHOST=guest
    ports:
      - "5672:5672"
      - "15672:15672"
      - "61613:61613"
    healthcheck:
      test: [ 'CMD', 'rabbitmq-diagnostics', '-q', 'ping' ]
      start_period: 4s
      interval: 5s
      timeout: 1s
      retries: 1

  camera:
    image: camera:latest
    build:
      context: .
      dockerfile: ./camera.dockerfile
    environment:
      RMQ_URI: 'amqp://guest:guest@rmq:5672/guest'
    depends_on:
      rmq:
        condition: service_healthy

  monitor:
    image: monitor:latest
    build:
      context: .
      dockerfile: ./monitor.dockerfile
    environment:
      RMQ_URI: 'amqp://guest:guest@rmq:5672/guest'
    depends_on:
      rmq:
        condition: service_healthy

  sensor:
    image: sensor:latest
    build:
      context: .
      dockerfile: ./sensor.dockerfile
    environment:
      RMQ_URI: 'amqp://guest:guest@rmq:5672/guest'
    depends_on:
      rmq:
        condition: service_healthy

  disease_detector:
    image: disease_detector:latest
    build:
      context: .
      dockerfile: ./disease_detector.dockerfile
    environment:
      RMQ_URI: 'amqp://guest:guest@rmq:5672/guest'
    depends_on:
      rmq:
        condition: service_healthy

  irrigation_controller:
    image: irrigation_controller:latest
    build:
      context: .
      dockerfile: ./irrigation_controller.dockerfile
    environment:
      RMQ_URI: 'amqp://guest:guest@rmq:5672/guest'
    depends_on:
      rmq:
        condition: service_healthy

  hardware_manager:
    image: hardware_manager:latest
    build:
      context: .
      dockerfile: ./hardware_manager.dockerfile
    environment:
      RMQ_URI: 'amqp://guest:guest@rmq:5672/guest'
    depends_on:
      rmq:
        condition: service_healthy

  irrigator:
    image: irrigator:latest
    build:
      context: .
      dockerfile: ./irrigator.dockerfile
    environment:
      RMQ_URI: 'amqp://guest:guest@rmq:5672/guest'
    depends_on:
      rmq:
        condition: service_healthy

  climate:
    image: climate:latest
    build:
      context: .
      dockerfile: ./climate.dockerfile
    environment:
      RMQ_URI: 'amqp://guest:guest@rmq:5672/guest'
    depends_on:
      rmq:
        condition: service_healthy

  core:
    image: core:latest
    ports:
      - "8000:8000"
    build:
      context: .
      dockerfile: ./core.dockerfile
    environment:
      RMQ_URI: 'amqp://guest:guest@rmq:5672/guest'
    depends_on:
      rmq:
        condition: service_healthy
